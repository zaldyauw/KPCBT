package com.cbt.entity;
// Generated 12-Jan-2020 16:42:34 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Coursedatabase generated by hbm2java
 */
@Entity
@Table(name="coursedatabase"
    ,catalog="computerbasedtest"
)
public class Coursedatabase  implements java.io.Serializable {


     private String id;
     private String name;
     private byte enableShuffle;
     private Set<User> users = new HashSet<User>(0);
     private Set<Question> questions = new HashSet<Question>(0);
     private Set<Subtest> subtests = new HashSet<Subtest>(0);

    public Coursedatabase() {
    }

	
    public Coursedatabase(String id, String name, byte enableShuffle) {
        this.id = id;
        this.name = name;
        this.enableShuffle = enableShuffle;
    }
    public Coursedatabase(String id, String name, byte enableShuffle, Set<User> users, Set<Question> questions, Set<Subtest> subtests) {
       this.id = id;
       this.name = name;
       this.enableShuffle = enableShuffle;
       this.users = users;
       this.questions = questions;
       this.subtests = subtests;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false, length=9)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="enable_shuffle", nullable=false)
    public byte getEnableShuffle() {
        return this.enableShuffle;
    }
    
    public void setEnableShuffle(byte enableShuffle) {
        this.enableShuffle = enableShuffle;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="expertise", catalog="computerbasedtest", joinColumns = { 
        @JoinColumn(name="CourseDatabase_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="User_id", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="coursedatabase")
    public Set<Question> getQuestions() {
        return this.questions;
    }
    
    public void setQuestions(Set<Question> questions) {
        this.questions = questions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="coursedatabase")
    public Set<Subtest> getSubtests() {
        return this.subtests;
    }
    
    public void setSubtests(Set<Subtest> subtests) {
        this.subtests = subtests;
    }




}


