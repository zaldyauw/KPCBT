package com.cbt.entity;
// Generated 12-Jan-2020 16:42:34 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="computerbasedtest"
)
public class User  implements java.io.Serializable {


     private String id;
     private Institute institute;
     private Role role;
     private String username;
     private String password;
     private String firstName;
     private String lastName;
     private String phoneNumber;
     private String email;
     private byte status;
     private Set<Userlog> userlogs = new HashSet<Userlog>(0);
     private Set<Coursedatabase> coursedatabases = new HashSet<Coursedatabase>(0);
     private Set<Test> tests = new HashSet<Test>(0);
     private Statusdetail statusdetail;
     private Set<Question> questions = new HashSet<Question>(0);

    public User() {
    }

	
    public User(String id, Institute institute, Role role, String username, String password, String firstName, String phoneNumber, String email, byte status) {
        this.id = id;
        this.institute = institute;
        this.role = role;
        this.username = username;
        this.password = password;
        this.firstName = firstName;
        this.phoneNumber = phoneNumber;
        this.email = email;
        this.status = status;
    }
    public User(String id, Institute institute, Role role, String username, String password, String firstName, String lastName, String phoneNumber, String email, byte status, Set<Userlog> userlogs, Set<Coursedatabase> coursedatabases, Set<Test> tests, Statusdetail statusdetail, Set<Question> questions) {
       this.id = id;
       this.institute = institute;
       this.role = role;
       this.username = username;
       this.password = password;
       this.firstName = firstName;
       this.lastName = lastName;
       this.phoneNumber = phoneNumber;
       this.email = email;
       this.status = status;
       this.userlogs = userlogs;
       this.coursedatabases = coursedatabases;
       this.tests = tests;
       this.statusdetail = statusdetail;
       this.questions = questions;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false, length=9)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Institute_id", nullable=false)
    public Institute getInstitute() {
        return this.institute;
    }
    
    public void setInstitute(Institute institute) {
        this.institute = institute;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Role_id", nullable=false)
    public Role getRole() {
        return this.role;
    }
    
    public void setRole(Role role) {
        this.role = role;
    }

    
    @Column(name="username", nullable=false, length=30)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false, length=30)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="first_name", nullable=false, length=75)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", length=75)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    
    @Column(name="phone_number", nullable=false, length=13)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    
    @Column(name="email", nullable=false, length=50)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="status", nullable=false)
    public byte getStatus() {
        return this.status;
    }
    
    public void setStatus(byte status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Userlog> getUserlogs() {
        return this.userlogs;
    }
    
    public void setUserlogs(Set<Userlog> userlogs) {
        this.userlogs = userlogs;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="expertise", catalog="computerbasedtest", joinColumns = { 
        @JoinColumn(name="User_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="CourseDatabase_id", nullable=false, updatable=false) })
    public Set<Coursedatabase> getCoursedatabases() {
        return this.coursedatabases;
    }
    
    public void setCoursedatabases(Set<Coursedatabase> coursedatabases) {
        this.coursedatabases = coursedatabases;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Test> getTests() {
        return this.tests;
    }
    
    public void setTests(Set<Test> tests) {
        this.tests = tests;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="user")
    public Statusdetail getStatusdetail() {
        return this.statusdetail;
    }
    
    public void setStatusdetail(Statusdetail statusdetail) {
        this.statusdetail = statusdetail;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Question> getQuestions() {
        return this.questions;
    }
    
    public void setQuestions(Set<Question> questions) {
        this.questions = questions;
    }




}


